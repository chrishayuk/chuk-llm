name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  PYTHON_VERSION: '3.11'
  UV_VERSION: '0.5.9'

jobs:
  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/chuk-llm
    permissions:
      id-token: write
      contents: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: ${{ env.UV_VERSION }}
      
      - name: Install build dependencies
        run: |
          pip install build twine
      
      - name: Build distribution
        run: |
          uv build
      
      - name: Check distribution
        run: |
          twine check dist/*
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*
          generate_release_notes: true
          draft: false
          prerelease: false

  test-installation:
    name: Test Installation
    needs: build-and-publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11', '3.12']
    
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Wait for PyPI to update
        run: |
          sleep 60
      
      - name: Install from PyPI
        run: |
          pip install chuk-llm
      
      - name: Test import
        run: |
          python -c "import chuk_llm; print(f'Successfully imported chuk_llm version {chuk_llm.__version__}')"
      
      - name: Test CLI
        run: |
          chuk-llm --help